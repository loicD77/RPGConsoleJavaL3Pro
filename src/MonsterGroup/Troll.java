package MonsterGroup;
import MonsterOriginal.Monster;

public class Troll extends Monster {
    // Variable pour stocker si le Troll a r√©g√©n√©r√© sa sant√©
    private boolean hasRegenerated;

    public Troll(int level) {
        super("Troll", "Cr√©ature puissante", 50, 10, level, 15, 30, 5); // 5 est la valeur pour l'or
        this.hasRegenerated = false; // Par d√©faut, le Troll n'a pas encore r√©g√©n√©r√© sa sant√©
    }

    @Override
    public String asciiArt() {
        return "  üë∫  \n" +
                " /|\\ \n" +
                " / \\ \n";
    }

    // Attaque sp√©ciale du Troll
    @Override
    protected int specialAttack() {
        System.out.println("Le Troll brandit une massue pour une attaque brutale !");
        return getBaseDamage() * 2; // Attaque sp√©ciale : d√©g√¢ts doubl√©s
    }

    // Le Troll peut r√©g√©n√©rer sa sant√© une fois lorsqu'il est gravement bless√©
    @Override
    public void takeDamage(int damage) {
        super.takeDamage(damage); // Appel √† la m√©thode de la classe parente

        // V√©rifie si la sant√© descend en dessous de 30% et s'il n'a pas encore r√©g√©n√©r√©
        if (health <= getBaseHealth() * 0.3 && !hasRegenerated) {
            regenerate();
            hasRegenerated = true; // Le Troll ne peut r√©g√©n√©rer qu'une seule fois
        }

        // Message selon l'√©tat du Troll
        if (!isAlive()) {
            System.out.println("Le Troll s'√©croule dans un rugissement de col√®re !");
        } else {
            System.out.println("Le Troll grogne de rage, ses blessures semblant √† peine le ralentir.");
        }
    }

    // M√©thode de r√©g√©n√©ration pour le Troll
    public void regenerate() {
        int healAmount = getBaseHealth() / 2; // Le Troll regagne 50% de sa sant√© de base
        health += healAmount;
        health = Math.min(health, maxHealth); // Ne pas d√©passer la sant√© maximale
        System.out.println("Le Troll r√©g√©n√®re ses blessures et r√©cup√®re " + healAmount + " points de vie !");
    }

    @Override
    public void displayStatus() {
        super.displayStatus(); // Affiche l'√©tat de base du monstre
        System.out.println("R√©g√©n√©ration disponible : " + (!hasRegenerated ? "Oui" : "Non"));
    }
}
